package calculate_Ver_Abstract;

import calculate_Ver_Interface.CalResult;
import lombok.Data;

@Data
public abstract class CalAbstract {
	
	private int a;
	private int b;
	private String op;
	private double sum=0;
	
	private StringBuffer sb = new StringBuffer();
	private double result=0;
	
	private CalResult calResult;
	

	public void add() {
		setSum(getSum()+getA());
		setResult(getSum());
	}
	public void sub() {
		setSum(getSum()-getA());
		setResult(getSum());
	}
	public void mul() {
		setSum(getSum()*getA());
		setResult(getSum());
	}
	public void div() {
		setSum(getSum()/getA());
		setResult(getSum());
	}
	public char judgeOp(String op) {
		if (op.equals("+")) {
			return op.charAt(0);
		} else if (op.equals("-")) {
			return op.charAt(0);
		} else if (op.equals("*")) {
			return op.charAt(0);
		} else if (op.equals("/")) {
			return op.charAt(0);
		}
		return 'X';
	}
	
	// 실제 계산 수행
	public void calculate() {
		if (getOp().equals("+")) {
			add();
		} else if (getOp().equals("-")) {
			sub();
		} else if (getOp().equals("*")) {
			mul();
		} else if (getOp().equals("/")) {
			div();
		}
	}

	// 입력받은게 숫자인지 기호인지 판단하는 객체
	public boolean judgeCal(boolean temp) {
		if (temp == true)
			return true;
		else
			return false;
	}

	// 숫자면 true, 기호면 false return
	public boolean judgeNumOrOp(String temp) {
		return temp.matches("-?\\d+");
	}
	
	public void PrintResult() {
		System.out.println("결과 : " + getSb());
	}
	
	public void PrintProcess() {
		System.out.println("연산 과정 : " + getResult());
	}

	
	// 추상메소드
	public abstract void cal();
	
	
	
	
	public void addDisplayResult(CalResult calResult) {
		this.calResult = calResult;
	}
	
	public void display() {
		calResult.PrintProcess();
		calResult.PrintResult();
	}

}
