package calculate_Ver3;

public interface InterfaceEx {
	
	// 상수 : 인터페이스에서 값을 정해줄테니 함부로 바꾸지 말고 제공해주는 값만 참조하라 (절대적)
	public int MAX_INTEGER = 1000000;
	
	// 추상메소드 : 가이드만 줄테니 추상메소드를 오버라이딩해서 재구현해라 (강제적)
	// implements 하면 추상메소드를 오버라이딩해서 반드시 써야한다.
	void withDraw(int price);
	
	void deposit(int price);
	
	// 디폴트메소드 : 인터페이스에서 기본적으로 제공해주지만, 각자 구현해서 쓸수 있다. (선택적)
	// 새로운 기능이 추가됐을 때 추상메소드로 선언해버리면 implements한 모든 사용자가 해당 메소드를
	// 
	default String findDormancyAccount(String custId){
		System.out.println("**금융개정법안 00이후 고객의 휴면계좌 찾아주기 운동**");
		System.out.println("**금융결제원에서 제공하는 로직**");
		return "00은행 000-000-0000-00";
	}
	
	// 정적메소드 : 인터페이스에서 제공해주는 것으로 무조건 사용 (절대적)
	// JAVA8에서 가능한 정적 메소드(블록체인 인증을 요청하는 메소드)
		static void BCAuth(String bankName){
			System.out.println(bankName+" 에서 블록체인 인증을 요청합니다.");
			System.out.println("전 금융사 공통 블록체인 로직 수행");
		}
}
